import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Button, TextField } from '@mui/material';
import Web3ContextProvider, {
  IWeb3Context,
  useWeb3Context,
} from '../app/contexts/web3Context';
import React from 'react';
import { encrypt } from '@metamask/eth-sig-util';

const Home: NextPage = () => {
  const {
    connectWallet,
    getPublicKey,
    decryptMessage,
    state: { isAuthenticated },
  } = useWeb3Context() as IWeb3Context;

  const [publicKey, setPublicKey] = React.useState<string | null>(null);
  const [message, setMessage] = React.useState<string>('');
  const [encryptedMessage, setEncryptedMessage] = React.useState<string>('');
  const [decryptedMessage, setDecryptedMessage] = React.useState<string>('');

  const onConnectWalletClicked = async () => {
    await connectWallet();
  };

  const onGetPublicKeyClicked = async () => {
    const publicKey = await getPublicKey();
    setPublicKey(publicKey);
  };

  const onMessageEncryptClicked = async () => {
    if (publicKey == null) return;
    const encryptedMessage = await encrypt({
      publicKey,
      data: message,
      version: 'x25519-xsalsa20-poly1305',
    });
    setEncryptedMessage(encryptedMessage.ciphertext);
  };

  const onDecryptMessageClicked = async () => {
    if (encryptedMessage == null) return;
    const decryptedMessage = await decryptMessage(encryptedMessage);
    setDecryptedMessage(decryptedMessage || '');
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          {isAuthenticated ? (
            <div>
              <Button onClick={onGetPublicKeyClicked}>Get Public Key</Button>
              <p>Public Key: {publicKey}</p>
              <TextField
                onChange={(e) => setMessage(e.target.value)}
                placeholder="Type message to be encrypted"
              ></TextField>
              <Button onClick={onMessageEncryptClicked}>Encrypt Message</Button>
              <p>Encrypted Message: {encryptedMessage}</p>
              <Button onClick={onDecryptMessageClicked}>Decrypt Message</Button>
              <p>Decrypted Message: {decryptedMessage}</p>
            </div>
          ) : (
            <Button onClick={onConnectWalletClicked}>Connect Wallet</Button>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
